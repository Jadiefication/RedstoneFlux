plugins {
    id 'java'
    id 'io.github.goooler.shadow' version '8.1.8'
}

project.ext {
    testFolder = property("test-folder")
    archiveFolder = file("archive/")
    targetFolder = file("target/")
    apiFolder = file("target/api/")
}

group = 'fr.traqueur.energylib'
version = property('version')

allprojects {
    apply plugin: 'java'
    apply plugin: 'io.github.goooler.shadow'

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(21))
        }
    }

    repositories {
        //mavenLocal()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven {
            name = "spigotmc-repo"
            url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/groups/public/"
        }
        maven {
            url "https://repo.oraxen.com/releases"
        }

    }

    dependencies {
        compileOnly "org.spigotmc:spigot-api:1.21-R0.1-SNAPSHOT"

        compileOnly 'io.th0rgal:oraxen:1.182.0'
        compileOnly 'com.github.LoneDev6:API-ItemsAdder:3.6.3-beta-14'

        implementation "com.github.technicallycoded:FoliaLib:main-SNAPSHOT"
        implementation "dev.dejvokep:boosted-yaml:1.3.6"
    }

    compileJava.options.encoding = 'UTF-8'

    tasks.withType(JavaCompile).tap {
        configureEach {
            options.encoding = 'UTF-8'
        }
    }
}

subprojects {

    shadowJar {
        archiveFileName = "${project.name}.jar"
        destinationDirectory = rootProject.targetFolder
    }

}

repositories {
    maven {
        name = "devmart-other"
        url = "https://nexuslite.gcnt.net/repos/other/"
    }
}

dependencies {
    implementation(project(":EnergyAPI"))
}

jar {
    from {
        for (File file : rootProject.archiveFolder.listFiles()) {
            zipTree(file)
        }
    }
}

processResources {
    outputs.upToDateWhen { false }
    def props = [version: version]
    inputs.properties props
    filesMatching('**/*.yml') {
        expand props
    }
}

shadowJar {
    dependsOn(jar)

    delete fileTree(rootProject.targetFolder.getAbsolutePath())

    relocate 'com.tcoded.folialib', 'fr.traqueur.energylib.api.platform.folia'
    relocate 'dev.dejvokep.boostedyaml', 'fr.traqueur.energylib.api.boostedyaml'

    archiveFileName = rootProject.name + "-" + rootProject.version + ".jar"
    destinationDirectory = rootProject.targetFolder

    from sourceSets.getByName("main").output
    configurations = [project.configurations.getByName("runtimeClasspath")]
}

clean {
    delete rootProject.archiveFolder
}

build {
    dependsOn shadowJar
    dependsOn clean
}

tasks.register('copyFiles', Copy) {
    from rootProject.targetFolder
    into rootProject.testFolder
}

tasks.register('publish') {
    dependsOn ':EnergyAPI:publish'
}

build.finalizedBy(copyFiles)

publish.shouldRunAfter shadowJar
shadowJar.shouldRunAfter build
build.shouldRunAfter subprojects.build

compileJava.dependsOn childProjects.values().shadowJar

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}